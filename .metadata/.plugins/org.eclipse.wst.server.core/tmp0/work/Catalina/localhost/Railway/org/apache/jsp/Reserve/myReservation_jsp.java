/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-05-21 14:43:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Reserve;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.catalina.Session;
import java.util.ArrayList;
import Reservation.My_current_res;

public final class myReservation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.catalina.Session");
    _jspx_imports_classes.add("Reservation.My_current_res");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");

    String Username;
    Username = (String)session.getAttribute("user_name");
    System.out.println("\n Username :"+Username);
    
      out.write("\r\n");
      out.write("    \r\n");
      out.write("     \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>My Resavation</title>\r\n");
      out.write("<!-- Boostrap linked files -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\r\n");
      out.write("<!-- Boostrap linked files -->\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- Nav Bar -->\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  <nav class=\"navbar navbar-dark bg-primary\" style=\"display:flex;flex-direction: row;justify-content: space-between;\" >\r\n");
      out.write("  <a class=\"navbar-brand\" href=\"#\">User : ");
      out.print(Username );
      out.write("</a>\r\n");
      out.write("  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("    <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("  </button>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n");
      out.write("    <ul class=\"navbar-nav mr-auto\">\r\n");
      out.write("      <li class=\"nav-item active\">\r\n");
      out.write("        <a class=\"nav-link\" href=\"#\">Home</a>\r\n");
      out.write("      </li>\r\n");
      out.write("      \r\n");
      out.write("    </ul>\r\n");
      out.write("    \r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("  \r\n");
      out.write(" \r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- End of Nav Bar -->\r\n");
      out.write("<br>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("<h1> <center>My Reservations</center> </h1>\r\n");
      out.write("<br>\r\n");
      out.write("<hr style=\"border: 2px solid #000000;\">\r\n");
      out.write("\r\n");
      out.write(" ");
 ArrayList allres = (ArrayList)request.getAttribute("My_current_res"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<table class=\"table table-striped\">\r\n");
      out.write("  <thead>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th scope=\"col\">Name</th>\r\n");
      out.write("      <th scope=\"col\">Email</th>\r\n");
      out.write("      <th scope=\"col\">Phone</th>\r\n");
      out.write("      <th scope=\"col\">From</th>\r\n");
      out.write("      <th scope=\"col\">To</th>\r\n");
      out.write("      <th scope=\"col\">Update</th>\r\n");
      out.write("      <th scope=\"col\">Delete</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("  </thead>\r\n");
      out.write("  <tbody>\r\n");
      out.write("  ");
for(int i = 0 ; i<allres.size();i++){ 
      out.write("\r\n");
      out.write("  ");
My_current_res my_c = ( My_current_res)allres.get(i); 
      out.write("\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>");
      out.print(my_c.getRname() );
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(my_c.getRemail() );
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(my_c.getRphone() );
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(my_c.getRfrom() );
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print(my_c.getRto()   );
      out.write("</td>\r\n");
      out.write("      \r\n");
      out.write("      <td>\r\n");
      out.write("      	<form action=\"Del_reser_sev\" method=\"get\">\r\n");
      out.write("      	<input type=\"hidden\" value=\"");
      out.print(my_c.getRid());
      out.write("\" name=\"id\">\r\n");
      out.write("      	<button type=\"submit\" class=\"btn btn-danger\">Delete</button>\r\n");
      out.write("      	</form>\r\n");
      out.write("      </td>\r\n");
      out.write("      <td>\r\n");
      out.write("      	<form action=\"Reserve/UpdateReservation.jsp\" method=\"get\">\r\n");
      out.write("      	<input type=\"hidden\" value=\"");
      out.print(my_c.getRid());
      out.write("\" name=\"id\">\r\n");
      out.write("      	<input type=\"hidden\" value=\"");
      out.print(my_c.getRname());
      out.write("\" name=\"name\">\r\n");
      out.write("      	<input type=\"hidden\" value=\"");
      out.print(my_c.getRphone());
      out.write("\" name=\"phone\">\r\n");
      out.write("      	<input type=\"hidden\" value=\"");
      out.print(my_c.getRfrom());
      out.write("\" name=\"from\">\r\n");
      out.write("      	<input type=\"hidden\" value=\"");
      out.print(my_c.getRto());
      out.write("\" name=\"to\">\r\n");
      out.write("      	<input type=\"hidden\" value=\"");
      out.print(my_c.getRemail());
      out.write("\" name=\"mail\">\r\n");
      out.write("      	<button type=\"submit\" class=\"btn btn-success\">Update</button>\r\n");
      out.write("      	</form>\r\n");
      out.write("      </td>\r\n");
      out.write("      \r\n");
      out.write("    </tr>\r\n");
      out.write("    ");
} 
      out.write("\r\n");
      out.write("  </tbody>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Boostrap linked files -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\" integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js\" integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<!-- Boostrap linked files -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
